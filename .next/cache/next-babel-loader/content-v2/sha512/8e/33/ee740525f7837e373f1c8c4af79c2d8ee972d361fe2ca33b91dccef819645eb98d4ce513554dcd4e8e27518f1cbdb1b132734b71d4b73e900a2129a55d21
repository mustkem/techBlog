{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Prism from \"prismjs\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Layout from \"../Layout/Layout\";\nimport { API_URL } from \"../../../config\";\nimport UpdatePost from \"../CreatePost\";\n\nclass PostDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"deletePost\", () => {\n      axios({\n        method: \"delete\",\n        url: API_URL + \"/admin/feed/post/\" + this.props.match.params.postId,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\")\n        },\n        data: {\n          authorCode: this.state.authorCode\n        }\n      }).then(response => {\n        this.setState({\n          showDeleteModel: !this.state.showDeleteModel\n        });\n        alert(\"Deleted\");\n        this.props.history.push(\"/admin/posts/home\");\n        return response.data;\n      }).catch(function (error) {\n        alert(\"Error\");\n        return error;\n      });\n    });\n\n    _defineProperty(this, \"onEditClick\", () => {\n      this.setState({\n        editPost: !this.state.editPost\n      });\n    });\n\n    this.state = {\n      editPost: false,\n      post: null,\n      authorCode: null,\n      showDeleteModel: false\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: \"get\",\n      url: API_URL + \"/admin/feed/post/\" + this.props.match.params.postId,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\")\n      }\n    }).then(response => {\n      this.setState({\n        post: response.data.post\n      }, () => {\n        setTimeout(() => Prism.highlightAll(), 0);\n      });\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  }\n\n  render() {\n    const postItem = this.state.post;\n\n    if (!postItem) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"post-page\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-9\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"bttn-wrap\",\n                children: [/*#__PURE__*/_jsxs(Button, {\n                  onClick: this.onEditClick,\n                  children: [!this.state.editPost && \"Edit Post\", this.state.editPost && \"View Post\"]\n                }), /*#__PURE__*/_jsx(Button, {\n                  style: {\n                    marginLeft: 10\n                  },\n                  variant: \"danger\",\n                  onClick: () => {\n                    this.setState({\n                      showDeleteModel: !this.state.showDeleteModel\n                    });\n                  },\n                  children: \"Delete Post\"\n                })]\n              }), !this.state.editPost && /*#__PURE__*/_jsx(\"div\", {\n                className: \"post-wrap\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"post RichEditor-editor\",\n                  children: [/*#__PURE__*/_jsx(\"h1\", {\n                    className: \"title\",\n                    children: /*#__PURE__*/_jsx(\"strong\", {\n                      children: postItem.title\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: postItem.content\n                    }\n                  })]\n                })\n              }), this.state.editPost && /*#__PURE__*/_jsx(\"div\", {\n                className: \"post-wrap\",\n                children: /*#__PURE__*/_jsx(UpdatePost, {\n                  editPost: true,\n                  content: postItem.content,\n                  title: postItem.title,\n                  desc: postItem.desc,\n                  selectedCategories: postItem.categories && postItem.categories.map(item => _objectSpread(_objectSpread({}, item), {}, {\n                    value: item._id\n                  })),\n                  postId: postItem._id\n                })\n              })]\n            })\n          })\n        })\n      }), /*#__PURE__*/_jsxs(Modal, {\n        show: this.state.showDeleteModel,\n        onHide: () => {\n          this.setState({\n            handleClose: !this.state.handleClose\n          });\n        },\n        children: [/*#__PURE__*/_jsx(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsx(Modal.Title, {\n            children: \"Do you want to delete this post?\"\n          })\n        }), /*#__PURE__*/_jsxs(Modal.Body, {\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            children: postItem.title\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            class: \"grp\",\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              children: \"Auth code\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              value: this.state.authorCode,\n              onChange: e => {\n                this.setState({\n                  authorCode: e.target.value\n                });\n              }\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Modal.Footer, {\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"danger\",\n            onClick: this.deletePost,\n            children: \"Delete\"\n          })\n        })]\n      })]\n    });\n  }\n\n}\n\nexport default PostDetail;","map":null,"metadata":{},"sourceType":"module"}