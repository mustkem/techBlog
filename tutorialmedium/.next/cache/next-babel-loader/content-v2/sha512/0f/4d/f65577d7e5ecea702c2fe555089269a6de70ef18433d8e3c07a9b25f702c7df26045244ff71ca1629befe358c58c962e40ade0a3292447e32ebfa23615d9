{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/tutorialmedium/pages/[slug].js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Head from \"next/head\";\nimport PostComponent from \"../Components/PostPage\";\n\nfunction PostPage({\n  post\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"Description\",\n        content: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostComponent, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n} // This function gets called at build time\n\n\n_c = PostPage;\n\nconst mapStateToprops = state => {\n  return {\n    products: state.page.post\n  };\n};\n\nexport var __N_SSG = true;\nexport default connect(mapStateToprops)(PostPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/tutorialmedium/pages/[slug].js"],"names":["React","connect","Head","PostComponent","PostPage","post","title","desc","mapStateToprops","state","products","page"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;;AAOA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAC1B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,IAAI,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,IAAI,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;KAZSD,Q;;AAmDT,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,CAAWN;AADhB,GAAP;AAGD,CAJD;;;AAMA,eAAeJ,OAAO,CAACO,eAAD,CAAP,CAAyBJ,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Head from \"next/head\";\n\nimport PostComponent from \"../Components/PostPage\";\n\nimport { wrapper as storeWrapper } from \"../Store/store\";\nimport { getPost2 } from \"../Store/Actions/actions\";\n\nimport { API_URL } from \"../config\";\n\nfunction PostPage({ post }) {\n  return (\n    <div>\n      <Head>\n        <title>{post.title}</title>\n        <meta name=\"Description\" content={post.desc} />\n      </Head>\n      <PostComponent post={post} />\n    </div>\n  );\n}\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios({\n    method: \"get\",\n    url: API_URL + \"/feed/posts\",\n  })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n\n  const posts = await res.posts;\n\n  // Get the paths we want to pre-render based on posts\n  const paths = [];\n  posts.forEach((post) => {\n    paths.push({\n      params: { slug: post.slug },\n    });\n  });\n\n  console.log(\"testeeeeeeeeee\", paths);\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false };\n}\n\nexport const getStaticProps = storeWrapper.getStaticProps(\n  async ({ params, store }) => {\n    await store.dispatch(getPost2(params.slug));\n\n    return { props: { post: store.getState().page.post } };\n  }\n);\n\nconst mapStateToprops = (state) => {\n  return {\n    products: state.page.post,\n  };\n};\n\nexport default connect(mapStateToprops)(PostPage);\n"]},"metadata":{},"sourceType":"module"}