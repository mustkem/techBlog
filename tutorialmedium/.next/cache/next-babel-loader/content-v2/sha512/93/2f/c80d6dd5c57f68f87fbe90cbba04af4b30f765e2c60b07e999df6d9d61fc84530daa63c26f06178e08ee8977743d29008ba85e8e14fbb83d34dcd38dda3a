{"ast":null,"code":"import { actionTypes } from \"../ActionsTypes/actionTypes\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nexport const addPost = payload => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {// axios({\n    //   method: \"post\",\n    //   url: API_URL + \"/admin/feed/post\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\"),\n    //   },\n    //   data:payload\n    // })\n    //   .then(function (response) {\n    //       return response.data;\n    //   })\n    //   .catch(function (error) {\n    //     return error;\n    //   });\n  };\n};\nexport const getAdminPosts = payload => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    axios({\n      method: \"get\",\n      url: API_URL + \"/admin/feed/post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\")\n      },\n      params: {\n        user: \"test\"\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  };\n}; // const fireStore = getFirestore();\n// fireStore.collection('posts').add(\n//     {\n//         ...payload.dataToPost\n//     }\n// ).then((res) => {\n//     dispatch({\n//         type: actionTypes.ADD_POST,\n//         payload: payload.dataToPost\n//     })\n// }).catch((err) => {\n//     console.log(err);\n// })\n\nexport const testActionCreator = payload => {}; // export const getPosts = (payload) => {\n//   return (dispatch, getState, { getFirebase, getFirestore }) => {\n//     const fireStore = getFirestore();\n//     fireStore\n//       .collection(\"posts\")\n//       .get()\n//       .then(function (querySnapshot) {\n//         let jsonData = [];\n//         querySnapshot.forEach(function (doc) {\n//           // doc.data() is never undefined for query doc snapshots\n//           jsonData.push(doc.data());\n//         });\n//         window.posts = jsonData;\n//         dispatch(onGetPosts(jsonData));\n//       });\n//   };\n// };\n\nexport const getPosts2 = payload => {\n  return dispatch => {\n    dispatch(onGetPosts({\n      loading: true\n    }));\n    return axios({\n      method: \"get\",\n      url: API_URL + \"/feed/posts\",\n      params: payload\n    }).then(function (response) {\n      dispatch(onGetPosts({\n        loading: false,\n        posts: response.data.posts\n      }));\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport const getPost = payload => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const fireStore = getFirestore();\n    let postsRef = fireStore.collection(\"posts\");\n    postsRef.where(\"slug\", \"==\", payload.slug).get().then(function (querySnapshot) {\n      let jsonData = [];\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        jsonData.push(doc.data());\n      });\n      window.post = jsonData; //dispatch(onGetPosts(jsonData));\n    });\n  };\n};\nexport const getPost2 = payload => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    return axios({\n      method: \"get\",\n      url: API_URL + \"/feed/post\",\n      params: payload\n    }).then(function (response) {\n      dispatch(onGetPosts(response.data.posts));\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport function onGetPosts(payload) {\n  return {\n    type: actionTypes.GET_POSTS,\n    payload: payload\n  };\n}\nexport const updatePost = payload => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const fireStore = getFirestore();\n    let postsRef = fireStore.collection(\"posts\");\n    postsRef.where(\"slug\", \"==\", payload.query.slug).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data()); // Build doc ref from doc.id\n\n        postsRef.doc(doc.id).update(payload.dataToPost);\n      });\n    });\n  };\n};\nexport const login = (payload, history) => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    return axios({\n      method: \"post\",\n      url: API_URL + \"/admin/auth/login\",\n      data: payload\n    }).then(function (response) {\n      localStorage.setItem(\"codemedium-token-admin\", response.data.token);\n      dispatch(loginAction(response.data.user));\n      history.push(\"/admin/posts/home\");\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n      alert(\"Wrong credentials\");\n    });\n  };\n};\nexport function loginAction(payload) {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    payload\n  };\n}","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/tutorialmedium/Store/Actions/actions.js"],"names":["actionTypes","axios","API_URL","addPost","payload","dispatch","getState","getFirebase","getFirestore","getAdminPosts","method","url","headers","Authorization","localStorage","getItem","params","user","then","response","data","catch","error","testActionCreator","getPosts2","onGetPosts","loading","posts","console","log","getPost","fireStore","postsRef","collection","where","slug","get","querySnapshot","jsonData","forEach","doc","push","window","post","getPost2","type","GET_POSTS","updatePost","query","id","update","dataToPost","login","history","setItem","token","loginAction","alert","LOGIN_SUCCESS"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAO,MAAMC,OAAO,GAAIC,OAAD,IAAa;AAClC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD,CAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAhBD;AAiBD,CAlBM;AAoBP,OAAO,MAAMC,aAAa,GAAIL,OAAD,IAAa;AACxC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC5DP,IAAAA,KAAK,CAAC;AACJS,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAET,OAAO,GAAG,kBAFX;AAGJU,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EACX,YAAYC,YAAY,CAACC,OAAb,CAAqB,wBAArB;AAHP,OAHL;AAQJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA;AARJ,KAAD,CAAL,CAYGC,IAZH,CAYQ,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAdH,EAeGC,KAfH,CAeS,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAjBH;AAkBD,GAnBD;AAoBD,CArBM,C,CAuBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,iBAAiB,GAAInB,OAAD,IAAa,CAAE,CAAzC,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMoB,SAAS,GAAIpB,OAAD,IAAa;AACpC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACoB,UAAU,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX,CAAR;AACA,WAAOzB,KAAK,CAAC;AACXS,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAET,OAAO,GAAG,aAFJ;AAGXc,MAAAA,MAAM,EAAEZ;AAHG,KAAD,CAAL,CAKJc,IALI,CAKC,UAAUC,QAAV,EAAoB;AACxBd,MAAAA,QAAQ,CAACoB,UAAU,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAER,QAAQ,CAACC,IAAT,CAAcO;AAAvC,OAAD,CAAX,CAAR;AACA,aAAOR,QAAQ,CAACC,IAAhB;AACD,KARI,EASJC,KATI,CASE,UAAUC,KAAV,EAAiB;AACtBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,KAXI,CAAP;AAYD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMQ,OAAO,GAAI1B,OAAD,IAAa;AAClC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC5D,UAAMuB,SAAS,GAAGvB,YAAY,EAA9B;AACA,QAAIwB,QAAQ,GAAGD,SAAS,CAACE,UAAV,CAAqB,OAArB,CAAf;AACAD,IAAAA,QAAQ,CACLE,KADH,CACS,MADT,EACiB,IADjB,EACuB9B,OAAO,CAAC+B,IAD/B,EAEGC,GAFH,GAGGlB,IAHH,CAGQ,UAAUmB,aAAV,EAAyB;AAC7B,UAAIC,QAAQ,GAAG,EAAf;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACnC;AACAF,QAAAA,QAAQ,CAACG,IAAT,CAAcD,GAAG,CAACpB,IAAJ,EAAd;AACD,OAHD;AAIAsB,MAAAA,MAAM,CAACC,IAAP,GAAcL,QAAd,CAN6B,CAO7B;AACD,KAXH;AAYD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMM,QAAQ,GAAIxC,OAAD,IAAa;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC5D,WAAOP,KAAK,CAAC;AACXS,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAET,OAAO,GAAG,YAFJ;AAGXc,MAAAA,MAAM,EAAEZ;AAHG,KAAD,CAAL,CAKJc,IALI,CAKC,UAAUC,QAAV,EAAoB;AACxBd,MAAAA,QAAQ,CAACoB,UAAU,CAACN,QAAQ,CAACC,IAAT,CAAcO,KAAf,CAAX,CAAR;AACA,aAAOR,QAAQ,CAACC,IAAhB;AACD,KARI,EASJC,KATI,CASE,UAAUC,KAAV,EAAiB;AACtBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,KAXI,CAAP;AAYD,GAbD;AAcD,CAfM;AAiBP,OAAO,SAASG,UAAT,CAAoBrB,OAApB,EAA6B;AAClC,SAAO;AACLyC,IAAAA,IAAI,EAAE7C,WAAW,CAAC8C,SADb;AAEL1C,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID;AAED,OAAO,MAAM2C,UAAU,GAAI3C,OAAD,IAAa;AACrC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC5D,UAAMuB,SAAS,GAAGvB,YAAY,EAA9B;AAEA,QAAIwB,QAAQ,GAAGD,SAAS,CAACE,UAAV,CAAqB,OAArB,CAAf;AACAD,IAAAA,QAAQ,CACLE,KADH,CACS,MADT,EACiB,IADjB,EACuB9B,OAAO,CAAC4C,KAAR,CAAcb,IADrC,EAEGC,GAFH,GAGGlB,IAHH,CAGQ,UAAUmB,aAAV,EAAyB;AAC7BA,MAAAA,aAAa,CAACE,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACnCZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACS,EAAhB,EAAoB,MAApB,EAA4BT,GAAG,CAACpB,IAAJ,EAA5B,EADmC,CAEnC;;AACAY,QAAAA,QAAQ,CAACQ,GAAT,CAAaA,GAAG,CAACS,EAAjB,EAAqBC,MAArB,CAA4B9C,OAAO,CAAC+C,UAApC;AACD,OAJD;AAKD,KATH;AAUD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMC,KAAK,GAAG,CAAChD,OAAD,EAAUiD,OAAV,KAAsB;AACzC,SAAO,CAAChD,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC5D,WAAOP,KAAK,CAAC;AACXS,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,GAAG,EAAET,OAAO,GAAG,mBAFJ;AAGXkB,MAAAA,IAAI,EAAEhB;AAHK,KAAD,CAAL,CAKJc,IALI,CAKC,UAAUC,QAAV,EAAoB;AACxBL,MAAAA,YAAY,CAACwC,OAAb,CAAqB,wBAArB,EAA+CnC,QAAQ,CAACC,IAAT,CAAcmC,KAA7D;AACAlD,MAAAA,QAAQ,CAACmD,WAAW,CAACrC,QAAQ,CAACC,IAAT,CAAcH,IAAf,CAAZ,CAAR;AACAoC,MAAAA,OAAO,CAACZ,IAAR,CAAa,mBAAb;AACA,aAAOtB,QAAQ,CAACC,IAAhB;AACD,KAVI,EAWJC,KAXI,CAWE,UAAUC,KAAV,EAAiB;AACtBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAmC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACD,KAdI,CAAP;AAeD,GAhBD;AAiBD,CAlBM;AAoBP,OAAO,SAASD,WAAT,CAAqBpD,OAArB,EAA8B;AACnC,SAAO;AACLyC,IAAAA,IAAI,EAAE7C,WAAW,CAAC0D,aADb;AAELtD,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { actionTypes } from \"../ActionsTypes/actionTypes\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\n\r\nexport const addPost = (payload) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // axios({\r\n    //   method: \"post\",\r\n    //   url: API_URL + \"/admin/feed/post\",\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //     Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\"),\r\n    //   },\r\n    //   data:payload\r\n    // })\r\n    //   .then(function (response) {\r\n    //       return response.data;\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     return error;\r\n    //   });\r\n  };\r\n};\r\n\r\nexport const getAdminPosts = (payload) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: API_URL + \"/admin/feed/post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization:\r\n          \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\"),\r\n      },\r\n      params: {\r\n        user: \"test\",\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  };\r\n};\r\n\r\n// const fireStore = getFirestore();\r\n// fireStore.collection('posts').add(\r\n//     {\r\n//         ...payload.dataToPost\r\n//     }\r\n// ).then((res) => {\r\n//     dispatch({\r\n//         type: actionTypes.ADD_POST,\r\n//         payload: payload.dataToPost\r\n//     })\r\n// }).catch((err) => {\r\n//     console.log(err);\r\n// })\r\n\r\nexport const testActionCreator = (payload) => {};\r\n\r\n// export const getPosts = (payload) => {\r\n//   return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n//     const fireStore = getFirestore();\r\n//     fireStore\r\n//       .collection(\"posts\")\r\n//       .get()\r\n//       .then(function (querySnapshot) {\r\n//         let jsonData = [];\r\n//         querySnapshot.forEach(function (doc) {\r\n//           // doc.data() is never undefined for query doc snapshots\r\n//           jsonData.push(doc.data());\r\n//         });\r\n//         window.posts = jsonData;\r\n//         dispatch(onGetPosts(jsonData));\r\n//       });\r\n//   };\r\n// };\r\n\r\nexport const getPosts2 = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch(onGetPosts({ loading: true }));\r\n    return axios({\r\n      method: \"get\",\r\n      url: API_URL + \"/feed/posts\",\r\n      params: payload,\r\n    })\r\n      .then(function (response) {\r\n        dispatch(onGetPosts({ loading: false, posts: response.data.posts }));\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getPost = (payload) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const fireStore = getFirestore();\r\n    let postsRef = fireStore.collection(\"posts\");\r\n    postsRef\r\n      .where(\"slug\", \"==\", payload.slug)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        let jsonData = [];\r\n        querySnapshot.forEach(function (doc) {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          jsonData.push(doc.data());\r\n        });\r\n        window.post = jsonData;\r\n        //dispatch(onGetPosts(jsonData));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getPost2 = (payload) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    return axios({\r\n      method: \"get\",\r\n      url: API_URL + \"/feed/post\",\r\n      params: payload,\r\n    })\r\n      .then(function (response) {\r\n        dispatch(onGetPosts(response.data.posts));\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport function onGetPosts(payload) {\r\n  return {\r\n    type: actionTypes.GET_POSTS,\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport const updatePost = (payload) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const fireStore = getFirestore();\r\n\r\n    let postsRef = fireStore.collection(\"posts\");\r\n    postsRef\r\n      .where(\"slug\", \"==\", payload.query.slug)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          console.log(doc.id, \" => \", doc.data());\r\n          // Build doc ref from doc.id\r\n          postsRef.doc(doc.id).update(payload.dataToPost);\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (payload, history) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    return axios({\r\n      method: \"post\",\r\n      url: API_URL + \"/admin/auth/login\",\r\n      data: payload,\r\n    })\r\n      .then(function (response) {\r\n        localStorage.setItem(\"codemedium-token-admin\", response.data.token);\r\n        dispatch(loginAction(response.data.user));\r\n        history.push(\"/admin/posts/home\");\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        alert(\"Wrong credentials\");\r\n      });\r\n  };\r\n};\r\n\r\nexport function loginAction(payload) {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    payload,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}