{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/Components/admin/Admin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { API_URL } from \"../../config\";\nimport { loginAction as _loginAction } from \"../../Store/Actions/actions\";\nimport AdminPosts from \"./Home/Home\";\nimport LoginAdmin from \"./Login\";\nimport PostDetail from \"./PostDetail/PostDetail\";\nimport CreatePost from \"./CreatePost\";\n\nfunction Admin(props) {\n  _s();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isValid = _React$useState2[0],\n      setIsValid = _React$useState2[1];\n\n  React.useEffect(function () {\n    return axios({\n      method: \"get\",\n      url: API_URL + \"/admin/auth/status\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\")\n      }\n    }).then(function (response) {\n      setIsValid(true);\n      props.loginAction(response.data.user);\n      return response.data;\n    })[\"catch\"](function (error) {\n      setIsValid(false);\n      history.push(\"/admin\");\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        children: /*#__PURE__*/_jsxDEV(LoginAdmin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"\".concat(path, \"/add/post\"),\n        component: CreatePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"\".concat(path, \"/posts/home\"),\n        children: /*#__PURE__*/_jsxDEV(AdminPosts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"\".concat(path, \"/:postId\"),\n        children: /*#__PURE__*/_jsxDEV(PostDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"M05uSqGPiMC/qX2Jtd/tm9mmBPs=\");\n\n_c = Admin;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginAction: function loginAction(payload) {\n      return dispatch(_loginAction(payload));\n    }\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Admin));\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/Components/admin/Admin.js"],"names":["React","withRouter","axios","connect","API_URL","loginAction","AdminPosts","LoginAdmin","PostDetail","CreatePost","Admin","props","useState","isValid","setIsValid","useEffect","method","url","headers","Authorization","localStorage","getItem","then","response","data","user","error","history","push","console","log","path","mapDispatchToProps","dispatch","payload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,WAAW,IAAXA,YAAT,QAA4B,6BAA5B;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA,wBAEUX,KAAK,CAACY,QAAN,CAAe,IAAf,CAFV;AAAA;AAAA,MAEbC,OAFa;AAAA,MAEJC,UAFI;;AAIpBd,EAAAA,KAAK,CAACe,SAAN,CAAgB,YAAM;AACpB,WAAOb,KAAK,CAAC;AACXc,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAEb,OAAO,GAAG,oBAFJ;AAGXc,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EACX,YAAYC,YAAY,CAACC,OAAb,CAAqB,wBAArB;AAHP;AAHE,KAAD,CAAL,CASJC,IATI,CASC,UAAUC,QAAV,EAAoB;AACxBT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,MAAAA,KAAK,CAACN,WAAN,CAAkBkB,QAAQ,CAACC,IAAT,CAAcC,IAAhC;AACA,aAAOF,QAAQ,CAACC,IAAhB;AACD,KAbI,WAcE,UAAUE,KAAV,EAAiB;AACtBZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KAlBI,CAAP;AAmBD,GApBD,EAoBG,EApBH;AAsBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEK,IAAnB;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKA,IAAL,cAAjB;AAAuC,QAAA,SAAS,EAAEtB;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKsB,IAAL,gBAAjB;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKA,IAAL,aAAjB;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9CQrB,K;;KAAAA,K;;AAgDT,IAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL5B,IAAAA,WAAW,EAAE,qBAAC6B,OAAD;AAAA,aAAaD,QAAQ,CAAC5B,YAAW,CAAC6B,OAAD,CAAZ,CAArB;AAAA;AADR,GAAP;AAGD,CAJD;;AAMA,eAAejC,UAAU,CAACE,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCtB,KAAlC,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"next/router\";\n\n\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport { API_URL } from \"../../config\";\nimport { loginAction } from \"../../Store/Actions/actions\";\n\nimport AdminPosts from \"./Home/Home\";\nimport LoginAdmin from \"./Login\";\nimport PostDetail from \"./PostDetail/PostDetail\";\nimport CreatePost from \"./CreatePost\";\n\nfunction Admin(props) {\n\n  const [isValid, setIsValid] = React.useState(true);\n\n  React.useEffect(() => {\n    return axios({\n      method: \"get\",\n      url: API_URL + \"/admin/auth/status\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\"),\n      },\n    })\n      .then(function (response) {\n        setIsValid(true);\n        props.loginAction(response.data.user);\n        return response.data;\n      })\n      .catch(function (error) {\n        setIsValid(false);\n        history.push(\"/admin\");\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path={path}>\n          <LoginAdmin />\n        </Route>\n      </Switch>\n      {/* {isValid && ( */}\n      <Switch>\n        <Route exact path={`${path}/add/post`} component={CreatePost} />\n        <Route exact path={`${path}/posts/home`}>\n          <AdminPosts />\n        </Route>\n        <Route exact path={`${path}/:postId`}>\n          <PostDetail />\n        </Route>\n      </Switch>\n      {/* )} */}\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginAction: (payload) => dispatch(loginAction(payload)),\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Admin));\n"]},"metadata":{},"sourceType":"module"}