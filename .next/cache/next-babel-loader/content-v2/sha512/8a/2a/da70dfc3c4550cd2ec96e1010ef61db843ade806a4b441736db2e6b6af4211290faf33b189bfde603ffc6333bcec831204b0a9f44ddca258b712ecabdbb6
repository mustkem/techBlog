{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/Components/admin/Home/Home.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { path } from 'ramda';\nimport axios from 'axios';\nimport { API_URL } from \"../../../config\";\nimport PostItem from './components/PostItem';\nimport { getAdminPosts } from '../../../Store/Actions/actions';\nimport Layout from '../Layout/Layout';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: \"get\",\n      url: API_URL + \"/admin/feed/posts\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\")\n      },\n      params: {\n        user: \"6035c940ab2e02358fac6e6b\"\n      }\n    }).then(response => {\n      this.setState({\n        posts: response.data.posts\n      });\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 30\n            },\n            children: \"Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-9\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"posts post-list\",\n                children: this.state.posts && this.state.posts.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(PostItem, {\n                    user: this.props.user,\n                    item: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 44\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"side-banner\",\n              xs: 0,\n              sm: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: path([\"page\", \"posts\"], state),\n    user: state.profileReducer.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAdminPosts: payload => dispatch(getAdminPosts(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/Components/admin/Home/Home.js"],"names":["React","connect","path","axios","API_URL","PostItem","getAdminPosts","Layout","Home","Component","constructor","props","state","posts","componentDidMount","method","url","headers","Authorization","localStorage","getItem","params","user","then","response","setState","data","catch","error","render","marginBottom","map","item","index","mapStateToProps","profileReducer","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { path } from 'ramda';\r\nimport axios from 'axios';\r\n\r\nimport { API_URL } from \"../../../config\";\r\n\r\n\r\nimport PostItem from './components/PostItem';\r\nimport { getAdminPosts } from '../../../Store/Actions/actions';\r\n\r\nimport Layout from '../Layout/Layout'\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts:[]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios({\r\n            method: \"get\",\r\n            url: API_URL + \"/admin/feed/posts\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\"),\r\n            },\r\n            params:{\r\n                user:\"6035c940ab2e02358fac6e6b\"\r\n            }\r\n          })\r\n            .then( (response)=> {\r\n                this.setState({\r\n                    posts:response.data.posts\r\n                })\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n              return error;\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Layout >\r\n            <div className=\"home\">\r\n                <div className=\"container\">\r\n                    <h3 style={{marginBottom:30}}>Posts</h3>\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-9\" >\r\n\r\n                            <ul className=\"posts post-list\">\r\n                                {\r\n                                    this.state.posts && this.state.posts.map((item, index) => {\r\n                                        return (\r\n                                           <PostItem user={this.props.user} item={item} key={index} />\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"side-banner\" xs={0} sm={4}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: path([\"page\", \"posts\"], state),\r\n        user: state.profileReducer.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAdminPosts: (payload)=> dispatch(getAdminPosts(payload))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}