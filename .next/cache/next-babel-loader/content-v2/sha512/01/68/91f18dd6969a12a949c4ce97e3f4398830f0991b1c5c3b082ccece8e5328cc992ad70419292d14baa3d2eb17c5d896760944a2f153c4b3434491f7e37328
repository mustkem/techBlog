{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Head from \"next/head\";\nimport PostComponent from \"../../Components/PostPage\";\nimport { wrapper as storeWrapper } from \"../../Store/store\";\nimport { getPost2 } from \"../../Store/Actions/actions\";\nimport { API_URL } from \"../../config\";\n\nfunction PostPage({\n  post\n}) {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: post.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"Description\",\n        content: post.desc\n      })]\n    }), /*#__PURE__*/_jsx(PostComponent, {\n      post: post\n    })]\n  });\n} // This function gets called at build time\n\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios({\n    method: \"get\",\n    url: API_URL + \"/feed/posts\"\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n  const posts = await res.posts; // Get the paths we want to pre-render based on posts\n\n  const paths = [];\n  posts.forEach(post => {\n    paths.push({\n      params: {\n        slug: post.slug\n      }\n    });\n  }); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport const getStaticProps = storeWrapper.getStaticProps(async ({\n  params,\n  store\n}) => {\n  await store.dispatch(getPost2(params.slug));\n  return {\n    props: {\n      post: store.getState().page.post\n    }\n  };\n});\n\nconst mapStateToprops = state => {\n  return {\n    products: state.page.post\n  };\n};\n\nexport default connect(mapStateToprops)(PostPage);","map":null,"metadata":{},"sourceType":"module"}