{"version":3,"sources":["Store/ActionsTypes/actionTypes.js","Store/Reducers/MyReducer/myReducer.js","Store/Reducers/rootReducer.js","Config/fbConfig.js","Store/store.js","Components/PromiseBasedActionComponent/PromiseBasedActionComponent.js","Containers/promiseBasedActionContianer.js","Store/Actions/promiseBasedAction.js","Components/Header/Header.js","Components/Layout/Layout.js","Components/Home/Author.js","Components/Layout/SideBanner/SideBanner.js","Components/sharedComponents/Advert/AdvertBannerTop.js","Components/Home/Home.js","Store/Actions/actions.js","Containers/HomeContainer/HomeContainer.js","Components/AddPost/MyEditor.js","Components/AddPost/AddPost.js","Components/AddPost/EditorConvertToHTML.js","Containers/AddPostContainer/AddPostContainer.js","Components/PostPage/PostPage.js","Containers/PostsContainer/PostsContainer.js","Components/Extra.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","initialState","rootReducer","combineReducers","page","state","action","type","posts","payload","firestore","firestoreReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","fbConfig","reactReduxFirebase","MyComp","console","log","this","props","testAction","then","React","Component","connect","data","dispatch","Promise","resolve","reject","className","Container","maxWidth","to","src","href","Header","children","Author","id","Home","getPosts","AdvertBannerTop","Grid","container","spacing","item","xs","sm","map","index","key","slug","title","desc","SideBanner","path","getState","collection","get","querySnapshot","jsonData","forEach","doc","push","onGetPosts","withRouter","homeActions","MyEditor","handleChange","e","setState","target","value","updatePost","preventDefault","replace","dataToPost","content","refs","editor","innerHTML","authorFirstName","authorLastName","authorId","createdAt","Date","query","alert","editorState","EditorState","createEmpty","focus","onChange","editorRef","createRef","handleKeyCommand","command","_handleKeyCommand","onTab","_onTab","toggleBlockType","_toggleBlockType","toggleInlineStyle","style","_toggleInlineStyle","contentState","stateFromHTML","createWithContent","newState","RichUtils","blockType","inlineStyle","getCurrentContent","hasText","getBlockMap","first","getType","placeholder","onToggle","onClick","blockStyleFn","getBlockStyle","customStyleMap","styleMap","ref","spellCheck","onSubmit","class","editPost","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","AddPost","addPost","add","res","catch","err","PostPage","onEditClick","getPost","match","params","setTimeIntervalId","setInterval","post","clearInterval","scroll","postItem","dangerouslySetInnerHTML","__html","where","postsRef","update","App","colorScale","x","y","interpolation","axis","ticks","size","stroke","strokeOpacity","strokeDasharray","grid","tick","strokeWidth","tickLabels","fillOpacity","axisLabel","fontsize","dependentAxis","display","x1","y1","x2","y2","offset","stopColor","width","height","fill","store","Layout","exact","component","HomeContainer","AddPostContainer","Extra","PostsContainer","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65e55b01.chunk.js","sourcesContent":["export const actionTypes = {\r\n    ADD_POST: 'ADD_POST',\r\n    GET_POSTS:'GET_POSTS'\r\n};","import { actionTypes } from '../../ActionsTypes/actionTypes';\r\nconst initialState = {}\r\n\r\nexport default function myReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_POST:\r\n            return {\r\n                ...state,\r\n                ...action\r\n            };\r\n        case actionTypes.GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            };\r\n            break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nimport myReducer from './MyReducer/myReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    page: myReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n//initialise firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB4g1fFy8mVY9fs5c7dW0ti7t53zP2Y2rs\",\r\n  authDomain: \"my-project-1525784461261.firebaseapp.com\",\r\n  databaseURL: \"https://my-project-1525784461261.firebaseio.com\",\r\n  projectId: \"my-project-1525784461261\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"234456308154\",\r\n  appId: \"1:234456308154:web:21336fccce9f972d\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({})\r\n\r\nexport default firebase;","\r\nimport { createStore, applyMiddleware, compose  } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\n\r\nimport rootReducer from './Reducers/rootReducer';\r\nimport fbConfig from '../Config/fbConfig';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const appStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig)\r\n        )\r\n)\r\nexport default appStore","import React from 'react';\r\n\r\nclass MyComp extends React.Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        this.props.testAction().then(() => {\r\n            console.log(\"test\")\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                test\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyComp;","import { connect } from 'react-redux';\r\nimport { testAction } from '../Store/Actions/promiseBasedAction';\r\nimport Component from '../Components/PromiseBasedActionComponent/PromiseBasedActionComponent'\r\n\r\n\r\nexport default connect(null, {\r\n    testAction\r\n})(Component);\r\n","// import axios from 'axios'\r\n\r\n\r\nexport const testAction = (data) => (dispatch) => (\r\n    new Promise(((resolve, reject) => {\r\n        console.log(\"test\", dispatch)\r\n        resolve()\r\n    }))\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PromiseBasedActionComponent from \"../../Containers/promiseBasedActionContianer\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"header top\">\r\n      <Container className=\"header-container\" maxWidth=\"lg\">\r\n        <div className=\"logo-wrp\">\r\n          <Link to=\"/\">\r\n            <img className=\"logo\" src=\"/images/logo.png\" />\r\n          </Link>\r\n        </div>\r\n        <ul className=\"navbar\">\r\n          <li>\r\n            <a href=\"/\">Javascript</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\">ReactJs</a>\r\n          </li>\r\n          {/* <li>\r\n                        <a href=\"/\">jQuery</a>\r\n                    </li> */}\r\n          <li>\r\n            <a href=\"/\">Demos</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/extra\">Extra</a>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/add-post\">Add</Link>\r\n          </li>\r\n        </ul>\r\n      </Container>\r\n      <PromiseBasedActionComponent />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\n\r\nexport default (props)=>{\r\n    return (\r\n        <div className=\"layout\">\r\n            <Header></Header>\r\n            {\r\n                props.children\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nclass Author extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"author-wrap clearfix\">\r\n                <div id=\"authorBox\">\r\n                    <img src='images/download (1).jpg' />\r\n                    <div>\r\n                        <h4>Asif Khan</h4>\r\n                        <p>Software Engineer</p>\r\n                        {/* <p>Bay Area</p> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Author;","import React from 'react';\r\n\r\nexport default ()=>{\r\n    return(\r\n        <div>\r\n            <div className=\"advertisement\">\r\n                <img src=\"/images/right-banner-5.jpg\" />\r\n            </div>\r\n            <div className=\"advertisement\">\r\n                <img src=\"/images/right-banner4.png\" />\r\n            </div>\r\n            <div className=\"advertisement\">\r\n                <img src=\"/images/right-banner-3.png\" />\r\n            </div>\r\n            <div className=\"advertisement\">\r\n                <img src=\"/images/right-banner-2.png\" />\r\n            </div>\r\n            <div className=\"advertisement\">\r\n                <img src=\"/images/right-1.png\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default()=>{\r\n    return (\r\n        <div className=\"banner-adv\">\r\n            <img className=\"post-image\" src=\"images/top-banner.jpg\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Author from './Author'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { path } from 'ramda';\r\n\r\nimport SideBanner from '../Layout/SideBanner/SideBanner';\r\nimport { lineHeight } from '@material-ui/system';\r\n\r\nimport AdvertBannerTop from '../sharedComponents/Advert/AdvertBannerTop'\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getPosts();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <Container>\r\n                    <AdvertBannerTop />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={8} >\r\n\r\n                            <ul className=\"posts post-list\">\r\n                                {\r\n                                    this.props.posts && this.props.posts.map((item, index) => {\r\n                                        return (\r\n                                            <li className=\"post-wrap\" key={index}>\r\n                                                <Link className=\"link title\" to={'/' + item.slug}>\r\n                                                    <div className=\"post-image\">\r\n                                                        <img src=\"images/JavaScriptListImage.png\" />\r\n                                                    </div>\r\n                                                    <div className=\"post-preview\" >\r\n                                                        <h2>{item.title}</h2>\r\n                                                        <div className=\"desc\">\r\n                                                            {\r\n                                                                item.desc\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </ul>\r\n                        </Grid>\r\n                        <Grid className=\"side-banner\" item xs={0} sm={4}>\r\n                            <SideBanner />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: path([\"page\", \"posts\"], state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home);","import { actionTypes } from '../ActionsTypes/actionTypes';\r\n\r\nexport const addPost = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n        fireStore.collection('posts').add(\r\n            {\r\n                ...payload.dataToPost\r\n            }\r\n        ).then((res) => {\r\n            dispatch({\r\n                type: actionTypes.ADD_POST,\r\n                payload: payload.dataToPost\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const testActionCreator = (payload) => {\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport const getPosts = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n        fireStore.collection(\"posts\").get().then(function (querySnapshot) {\r\n            let jsonData = [];\r\n            querySnapshot.forEach(function (doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                jsonData.push(doc.data())\r\n            });\r\n            window.posts = jsonData;\r\n            dispatch(onGetPosts(jsonData));\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const getPost = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n        let postsRef = fireStore.collection('posts');\r\n        postsRef.where('slug', '==', payload.slug).get().then(function (querySnapshot) {\r\n            let jsonData = [];\r\n            querySnapshot.forEach(function (doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                jsonData.push(doc.data())\r\n            });\r\n            window.post = jsonData;\r\n            //dispatch(onGetPosts(jsonData));\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport function onGetPosts(payload) {\r\n    return (\r\n        {\r\n            type: actionTypes.GET_POSTS,\r\n            payload: payload,\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const updatePost = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n\r\n        let postsRef = fireStore.collection('posts');\r\n        postsRef.where('slug', '==', payload.query.slug)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                    // Build doc ref from doc.id\r\n                    postsRef.doc(doc.id).update(payload.dataToPost);\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Home from '../../Components/Home/Home';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPosts: (payload) => dispatch(homeActions.getPosts(payload))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n","\r\nimport React from 'react';\r\nimport { Editor, EditorState, RichUtils, ContentState } from 'draft-js';\r\n\r\n// import htmlToDraft from 'html-to-draftjs';\r\nimport { stateFromHTML } from 'draft-js-import-html';\r\n\r\nclass MyEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: this.props.title,\r\n      desc: this.props.desc,\r\n      editorState: EditorState.createEmpty(),\r\n      authorId: null,\r\n    };\r\n\r\n    this.focus = () => this.refs.editor.focus();\r\n    this.onChange = (editorState) => this.setState({ editorState });\r\n\r\n    this.editorRef = React.createRef();\r\n    this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n    this.onTab = (e) => this._onTab(e);\r\n    this.toggleBlockType = (type) => this._toggleBlockType(type);\r\n    this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let contentState = stateFromHTML(this.props.content);\r\n\r\n    // const blocksFromHtml = htmlToDraft(this.props.content);\r\n    // const { contentBlocks, entityMap } = blocksFromHtml;\r\n    // const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n    const editorState = EditorState.createWithContent(contentState);\r\n    this.setState({\r\n      editorState: editorState\r\n    })\r\n  }\r\n\r\n  _handleKeyCommand(command) {\r\n    const { editorState } = this.state;\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _onTab(e) {\r\n    const maxDepth = 4;\r\n    this.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n  }\r\n\r\n  _toggleBlockType(blockType) {\r\n    this.onChange(\r\n      RichUtils.toggleBlockType(\r\n        this.state.editorState,\r\n        blockType\r\n      )\r\n    );\r\n  }\r\n\r\n  _toggleInlineStyle(inlineStyle) {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(\r\n        this.state.editorState,\r\n        inlineStyle\r\n      )\r\n    );\r\n  }\r\n\r\n  handleChange = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    })\r\n  }\r\n\r\n  updatePost = (e) => {\r\n    e.preventDefault()\r\n    let slug = this.state.title.replace(/\\s/g, '-');\r\n    if (this.props.slug) {\r\n      slug = this.props.slug\r\n    }\r\n\r\n    let payload = {\r\n      dataToPost: {\r\n        title: this.state.title,\r\n        desc: this.state.desc,\r\n        content: this.refs.editor.editor.innerHTML,\r\n        authorFirstName: 'Mi',\r\n        authorLastName: \"Nin\",\r\n        authorId: this.state.authorId,\r\n        createdAt: new Date(),\r\n        slug: slug\r\n      },\r\n      query: {\r\n        ...this.props.query,\r\n        id: this.props.id\r\n      }\r\n    }\r\n    if(this.state.authorId==='8958'){\r\n      this.props.updatePost(payload);\r\n      alert(\"So far so good\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    // If the user changes block type before entering any text, we can\r\n    // either style the placeholder or hide it. Let's just hide it now.\r\n    let className = 'RichEditor-editor';\r\n    var contentState = editorState.getCurrentContent();\r\n    if (!contentState.hasText()) {\r\n      if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n        className += ' RichEditor-hidePlaceholder';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"my-editor\">\r\n        <div>\r\n          <p>\r\n            Write Post\r\n                </p>\r\n        </div>\r\n        <div>\r\n          <p>Title</p>\r\n          <input value={this.state.title} onChange={(e) => { this.handleChange(e, \"title\") }} placeholder=\"title...\"></input>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            Description\r\n                </p>\r\n          <textarea value={this.state.desc} onChange={(e) => { this.handleChange(e, \"desc\") }} />\r\n        </div>\r\n        <div className=\"edittor-wrp RichEditor-root\">\r\n          <BlockStyleControls\r\n            editorState={editorState}\r\n            onToggle={this.toggleBlockType}\r\n          />\r\n          <InlineStyleControls\r\n            editorState={editorState}\r\n            onToggle={this.toggleInlineStyle}\r\n          />\r\n          <div className={className} onClick={this.focus}>\r\n            <Editor\r\n\r\n              blockStyleFn={getBlockStyle}\r\n              customStyleMap={styleMap}\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              onChange={this.onChange}\r\n              onTab={this.onTab}\r\n\r\n              ref=\"editor\"\r\n              spellCheck={true}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"bttn-wrap\">\r\n          <form className=\"author-id-form\" onSubmit={this.updatePost}>\r\n          <div class=\"grp\">\r\n            <label>Author Id </label>\r\n            <input type=\"password\" value={this.state.authorId} onChange={(e)=>{this.setState({authorId:e.target.value})}} />\r\n            </div>\r\n            {\r\n              !this.props.editPost &&\r\n              <button>Publish</button>\r\n            }\r\n            {\r\n              this.props.editPost &&\r\n                <button> Update </button>\r\n            }\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 2,\r\n  },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n  switch (block.getType()) {\r\n    case 'blockquote': return 'RichEditor-blockquote';\r\n    default: return null;\r\n  }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.onToggle = (e) => {\r\n      e.preventDefault();\r\n      this.props.onToggle(this.props.style);\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    let className = 'RichEditor-styleButton';\r\n    if (this.props.active) {\r\n      className += ' RichEditor-activeButton';\r\n    }\r\n\r\n    return (\r\n      <span className={className} onMouseDown={this.onToggle}>\r\n        {this.props.label}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n  { label: 'H1', style: 'header-one' },\r\n  { label: 'H2', style: 'header-two' },\r\n  { label: 'H3', style: 'header-three' },\r\n  { label: 'H4', style: 'header-four' },\r\n  { label: 'H5', style: 'header-five' },\r\n  { label: 'H6', style: 'header-six' },\r\n  { label: 'Blockquote', style: 'blockquote' },\r\n  { label: 'UL', style: 'unordered-list-item' },\r\n  { label: 'OL', style: 'ordered-list-item' },\r\n  { label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n  const { editorState } = props;\r\n  const selection = editorState.getSelection();\r\n  const blockType = editorState\r\n    .getCurrentContent()\r\n    .getBlockForKey(selection.getStartKey())\r\n    .getType();\r\n\r\n  return (\r\n    <div className=\"RichEditor-controls\">\r\n      {BLOCK_TYPES.map((type) =>\r\n        <StyleButton\r\n          key={type.label}\r\n          active={type.style === blockType}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n  { label: 'Bold', style: 'BOLD' },\r\n  { label: 'Italic', style: 'ITALIC' },\r\n  { label: 'Underline', style: 'UNDERLINE' },\r\n  { label: 'Monospace', style: 'CODE' },\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n  var currentStyle = props.editorState.getCurrentInlineStyle();\r\n  return (\r\n    <div className=\"RichEditor-controls\">\r\n      {INLINE_STYLES.map(type =>\r\n        <StyleButton\r\n          key={type.label}\r\n          active={currentStyle.has(type.style)}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEditor;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport MyEditor from './MyEditor';\r\nimport EditorConvertToHTML from './EditorConvertToHTML'\r\n\r\nclass AddPost extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <Container maxWidth=\"lg\">\r\n                    <MyEditor\r\n                        updatePost={this.props.addPost}\r\n                        content={''}\r\n                        title={''}\r\n                        desc={''}\r\n                        query={false}\r\n                        slug={false}\r\n                    />\r\n                    {/* <EditorConvertToHTML addPost={this.props.addPost} />> */}\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddPost;\r\n","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\n\r\nclass EditorConvertToHTML extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title:'',\r\n          editorState: EditorState.createEmpty(),\r\n          authorKey:\"\"\r\n        };\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    handleChange=(e,key)=>{\r\n        this.setState({\r\n          [key]:e.target.value\r\n        })\r\n      }\r\n\r\n    addPost = () => {\r\n        console.log(draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())))\r\n        console.log(this.state.editorState.getCurrentContent().toJS())\r\n        let dataToPost = {\r\n            title: this.state.title,\r\n            content: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\r\n            authorFiesrName: 'Mi',\r\n            authorlastName: \"Nin\",\r\n            authorId: 12345,\r\n            createdAt: new Date()\r\n        }\r\n        this.props.addPost(dataToPost);\r\n    }\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div className=\"my-editor\">\r\n                <div>\r\n                    <p>\r\n                        Write Post\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p>Title</p>\r\n                    <input value={this.state.title} onChange={(e) => { this.handleChange(e, \"title\") }} placeholder=\"title...\"></input>\r\n                </div>\r\n                <Editor\r\n                    editorState={editorState}\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    ref=\"editor\"\r\n                    spellCheck={true}\r\n                />\r\n                <div>\r\n                    <span>Author Key</span>\r\n                    <input value={this.state.authorKey} onChange={(e) => { this.handleChange(e, \"authorKey\") }}></input>\r\n                </div>\r\n                <button onClick={this.addPost}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditorConvertToHTML;","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport AddPost from '../../Components/AddPost/AddPost';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: (payload) => dispatch(homeActions.addPost(payload)),\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddPost));\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withRouter } from \"react-router\"\r\nimport { path } from 'ramda'\r\n\r\nimport SideBanner from '../Layout/SideBanner/SideBanner'\r\nimport Author from '../Home/Author';\r\nimport MyEditor from '../AddPost/MyEditor';\r\nimport AdvertBannerTop from '../sharedComponents/Advert/AdvertBannerTop';\r\n\r\nclass PostPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editPost: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.match.params);\r\n        let setTimeIntervalId = setInterval(() => {\r\n            if (window.post) {\r\n                clearInterval(setTimeIntervalId);\r\n                this.setState({\r\n                    post: window.post\r\n                })\r\n            }\r\n        }, 1000);\r\n        window.scroll(0, 0)\r\n        \r\n    }\r\n\r\n    onEditClick = () => {\r\n        this.setState({\r\n            editPost: !this.state.editPost\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const postItem = path([0,], window.post);\r\n        if (!postItem) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"post-page\">\r\n                <Container>\r\n                    <AdvertBannerTop />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={8}>\r\n                            <div className=\"bttn-wrap\">\r\n                                <button onClick={this.onEditClick}>\r\n                                    {\r\n                                        !this.state.editPost &&\r\n                                        'Edit Post'\r\n                                    }\r\n                                    {\r\n                                        this.state.editPost &&\r\n                                        'View Post'\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                            {\r\n                                !this.state.editPost &&\r\n                                <div className=\"post-wrap\">\r\n                                    <div className=\"post RichEditor-editor\" >\r\n                                        <h1 className=\"title\">\r\n                                            <strong>{postItem.title}</strong>\r\n                                        </h1>\r\n                                        <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: postItem.content }}>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Author />\r\n                                </div>\r\n                            }\r\n                            {\r\n                                this.state.editPost &&\r\n                                <div>\r\n                                    <MyEditor\r\n                                        content={postItem.content}\r\n                                        title={postItem.title}\r\n                                        desc={postItem.desc}\r\n                                        updatePost={this.props.updatePost}\r\n                                        query={this.props.match.params}\r\n                                        slug={postItem.slug}\r\n                                        id={postItem.id}\r\n                                        editPost={true}\r\n\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        </Grid>\r\n                        <Grid className=\"side-banner\" item xs={0} sm={4}>\r\n                            <SideBanner />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PostPage);","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport PostPage from '../../Components/PostPage/PostPage';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n   getPost: (payload) => dispatch(homeActions.getPost(payload)),\r\n   updatePost: (payload) => dispatch(homeActions.updatePost(payload))\r\n   \r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostPage));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts';\r\nimport {\r\n  VictoryChart,\r\n  VictoryStack,\r\n  VictoryGroup,\r\n  VictoryArea,\r\n  VictoryPortal,\r\n  VictoryScatter,\r\n  VictoryAxis,\r\n  VictoryTheme\r\n} from \"victory\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n\r\n        <div className=\"chart-areea\">\r\n          <h2>Victory</h2>\r\n          <div className=\"victory-chart\">\r\n            <VictoryChart >\r\n              <VictoryStack colorScale={[\"#005aff50\"]}>\r\n                <VictoryGroup\r\n                  data={[\r\n                    { x: 100, y: 0 },\r\n                    { x: 170, y: 3.8 },\r\n                    { x: 300, y: 1 },\r\n                    { x: 400, y: 0 }\r\n                  ]}\r\n                >\r\n                  <VictoryArea\r\n                    style={{\r\n\r\n                    }}\r\n                    interpolation=\"natural\"\r\n                  />\r\n                </VictoryGroup>\r\n              </VictoryStack>\r\n\r\n              <VictoryAxis\r\n                style={{\r\n                  axis: {\r\n                   \r\n                  },\r\n                  ticks: {\r\n                    size: 15,\r\n                    stroke: \"black\",\r\n                    strokeOpacity: 0.2,\r\n                    strokeDasharray: \"5, 5\"\r\n                  },\r\n                  grid: {\r\n                    stroke: ({ tick, index }) => {\r\n                      if (index == 5) {\r\n                        return \"#00000000\"\r\n                      }\r\n                      return 'rgba(0, 0, 0, 0.2)';\r\n                    }\r\n                    ,\r\n                    strokeWidth: 1,\r\n                    strokeDasharray: \"5, 5\"\r\n                  },\r\n                  tickLabels: {\r\n                    fontSize: \"9px\",\r\n                    fontFamily: \"inherit\",\r\n                    fillOpacity: 1,\r\n\r\n                  },\r\n                  axisLabel: {\r\n                    fontsize: 13\r\n                  }\r\n                }}\r\n              />\r\n              <VictoryAxis\r\n                dependentAxis\r\n                label=\"Audience Size\"\r\n                style={{\r\n                  axis: {\r\n                  },\r\n                  ticks: {\r\n\r\n                  },\r\n                  grid: {\r\n                    display: \"none\"\r\n                  },\r\n                  tickLabels: {\r\n                    display: \"none\"\r\n\r\n                  },\r\n                  axisLabel: {\r\n                    fontsize: 13\r\n                  }\r\n                }}\r\n              />\r\n            </VictoryChart>\r\n            <svg className=\"test-svg\">\r\n              <defs>\r\n                <linearGradient id=\"linear\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                  <stop offset=\"0%\" stopColor=\"yellow\" />\r\n                  <stop offset=\"100%\" stopColor=\"red\" />\r\n                </linearGradient>\r\n              </defs>\r\n              <rect\r\n                x=\"10\"\r\n                y=\"10\"\r\n                width=\"100%\"\r\n                height=\"10\"\r\n                fill=\"url(#linear)\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*\r\n <div className=\"chart-area\">\r\n          <AreaChart width={730} height={250} data={data}\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n              </linearGradient>\r\n              <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" points={[\r\n              { x: 1.4, y: 2, y0: 0 },\r\n              { x: 2.2, y: 3, y0: 1 },\r\n              { x: 3, y: 5, y0: 1 },\r\n              { x: 4, y: 4, y0: 2 },\r\n              { x: 5, y: 6, y0: 2 }\r\n            ]} stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\r\n          </AreaChart>\r\n        </div>\r\n\r\n\r\n        \r\nconst data = [\r\n  {\r\n    \"name\": \"Page A\",\r\n    \"uv\": 4000,\r\n    \"pv\": 2400,\r\n    \"amt\": 2400\r\n  },\r\n  {\r\n    \"name\": \"Page B\",\r\n    \"uv\": 3000,\r\n    \"pv\": 1398,\r\n    \"amt\": 2210\r\n  },\r\n  {\r\n    \"name\": \"Page C\",\r\n    \"uv\": 2000,\r\n    \"pv\": 9800,\r\n    \"amt\": 2290\r\n  },\r\n  {\r\n    \"name\": \"Page D\",\r\n    \"uv\": 2780,\r\n    \"pv\": 3908,\r\n    \"amt\": 2000\r\n  },\r\n  {\r\n    \"name\": \"Page E\",\r\n    \"uv\": 1890,\r\n    \"pv\": 4800,\r\n    \"amt\": 2181\r\n  },\r\n  {\r\n    \"name\": \"Page F\",\r\n    \"uv\": 2390,\r\n    \"pv\": 3800,\r\n    \"amt\": 2500\r\n  },\r\n  {\r\n    \"name\": \"Page G\",\r\n    \"uv\": 3490,\r\n    \"pv\": 4300,\r\n    \"amt\": 2100\r\n  }\r\n]\r\n\r\n\r\n\r\n        */","import React from 'react';\r\nimport 'typeface-roboto';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store/store';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Layout from './Components/Layout/Layout';\r\nimport HomeContainer from './Containers/HomeContainer/HomeContainer';\r\nimport AddPostContainer from './Containers/AddPostContainer/AddPostContainer';\r\nimport PostsContainer from './Containers/PostsContainer/PostsContainer';\r\nimport Extra from './Components/Extra';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={HomeContainer}/>\r\n                <Route path=\"/add-post\" component={AddPostContainer}/>\r\n                <Route exact path=\"/extra\" component={Extra}/>\r\n                <Route exact path=\"/:slug\" component={PostsContainer}/>\r\n                \r\n            </Switch>\r\n          </Layout>\r\n          </BrowserRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}