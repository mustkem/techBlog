{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { API_URL } from \"../../config\";\nimport { loginAction as _loginAction } from \"../../Store/Actions/actions\";\nimport AdminPosts from \"./Home/Home\";\nimport LoginAdmin from \"./Login\";\nimport PostDetail from \"./PostDetail/PostDetail\";\nimport CreatePost from \"./CreatePost\";\n\nfunction Admin(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isValid = _React$useState2[0],\n      setIsValid = _React$useState2[1];\n\n  React.useEffect(function () {\n    return axios({\n      method: \"get\",\n      url: API_URL + \"/admin/auth/status\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"codemedium-token-admin\")\n      }\n    }).then(function (response) {\n      setIsValid(true);\n      props.loginAction(response.data.user);\n      return response.data;\n    })[\"catch\"](function (error) {\n      setIsValid(false);\n      history.push(\"/admin\");\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Switch, {\n      children: /*#__PURE__*/_jsx(Route, {\n        exact: true,\n        path: path,\n        children: /*#__PURE__*/_jsx(LoginAdmin, {})\n      })\n    }), /*#__PURE__*/_jsxs(Switch, {\n      children: [/*#__PURE__*/_jsx(Route, {\n        exact: true,\n        path: \"\".concat(path, \"/add/post\"),\n        component: CreatePost\n      }), /*#__PURE__*/_jsx(Route, {\n        exact: true,\n        path: \"\".concat(path, \"/posts/home\"),\n        children: /*#__PURE__*/_jsx(AdminPosts, {})\n      }), /*#__PURE__*/_jsx(Route, {\n        exact: true,\n        path: \"\".concat(path, \"/:postId\"),\n        children: /*#__PURE__*/_jsx(PostDetail, {})\n      })]\n    })]\n  });\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginAction: function loginAction(payload) {\n      return dispatch(_loginAction(payload));\n    }\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Admin));","map":null,"metadata":{},"sourceType":"module"}