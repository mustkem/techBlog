{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from '../../ActionsTypes/actionTypes';\nconst initialState = {};\nexport default function myReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_POST:\n      return _objectSpread(_objectSpread({}, state), action);\n\n    case actionTypes.GET_POSTS:\n      // console.log(\"test\", )\n      return _objectSpread(_objectSpread({}, state), action.payload);\n      break;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/tutorialmedium/Store/Reducers/MyReducer/myReducer.js"],"names":["actionTypes","initialState","myReducer","state","action","type","ADD_POST","GET_POSTS","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,gCAA5B;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAGF,YAA3B,EAAyCG,MAAzC,EAAiD;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAW,CAACM,QAAjB;AACI,6CACOH,KADP,GAEOC,MAFP;;AAIJ,SAAKJ,WAAW,CAACO,SAAjB;AACI;AACA,6CACOJ,KADP,GAEOC,MAAM,CAACI,OAFd;AAIA;;AAEJ;AACI,aAAOL,KAAP;AAfR;AAiBH","sourcesContent":["import { actionTypes } from '../../ActionsTypes/actionTypes';\r\nconst initialState = {}\r\n\r\nexport default function myReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_POST:\r\n            return {\r\n                ...state,\r\n                ...action\r\n            };\r\n        case actionTypes.GET_POSTS:\r\n            // console.log(\"test\", )\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n            break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}