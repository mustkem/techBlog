{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\n\nvar MyComp = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyComp, _React$Component);\n\n  var _super = _createSuper(MyComp);\n\n  function MyComp() {\n    _classCallCheck(this, MyComp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyComp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.testAction().then(function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(\"div\", {});\n    }\n  }]);\n\n  return MyComp;\n}(React.Component);\n\nexport default MyComp;","map":null,"metadata":{},"sourceType":"module"}