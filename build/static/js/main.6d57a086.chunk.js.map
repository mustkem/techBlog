{"version":3,"sources":["Store/ActionsTypes/actionTypes.js","Store/Reducers/MyReducer/myReducer.js","Store/Reducers/rootReducer.js","Config/fbConfig.js","Store/store.js","Components/PromiseBasedActionComponent/PromiseBasedActionComponent.js","Containers/promiseBasedActionContianer.js","Store/Actions/promiseBasedAction.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/Layout/Layout.js","Components/Layout/SideBanner/SideBanner.js","Components/Home/components/PostItem/PostItem.js","Components/Home/components/PostItem/index.js","Components/sharedComponents/Advert/AdvertBannerTop.js","Components/Home/Home.js","Store/Actions/actions.js","Containers/HomeContainer/HomeContainer.js","Components/AddPost/MyEditor.js","Components/AddPost/AddPost.js","Components/AddPost/EditorConvertToHTML.js","Containers/AddPostContainer/AddPostContainer.js","Components/Home/Author.js","Components/PostPage/PostPage.js","Containers/PostsContainer/PostsContainer.js","Components/PostPage2/PostPage.js","Containers/PostDetail/PostDetail.js","Components/admin/Login/Login.js","Components/admin/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","initialState","rootReducer","combineReducers","page","state","action","type","posts","payload","firestore","firestoreReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","fbConfig","reactReduxFirebase","MyComp","console","log","this","props","testAction","then","React","Component","connect","data","dispatch","Promise","resolve","reject","className","style","display","to","minWidth","src","position","top","marginLeft","href","background","fontSize","padding","Header","children","Footer","justifyContent","data-creative-load-listener","id","width","height","frameborder","scrolling","allowfullscreen","PostItem","item","index","margin","slug","title","Home","getPosts","Layout","marginTop","map","key","xs","sm","path","getState","collection","get","querySnapshot","jsonData","forEach","doc","push","onGetPosts","getPost","where","post","updatePost","postsRef","query","update","dataToPost","withRouter","homeActions","MyEditor","handleChange","e","setState","target","value","preventDefault","replace","desc","content","refs","editor","innerHTML","authorFirstName","authorLastName","authorId","createdAt","Date","alert","editorState","EditorState","createEmpty","focus","onChange","editorRef","createRef","handleKeyCommand","command","_handleKeyCommand","onTab","_onTab","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","contentState","stateFromHTML","createWithContent","newState","RichUtils","blockType","inlineStyle","getCurrentContent","hasText","getBlockMap","first","getType","placeholder","onToggle","onClick","blockStyleFn","getBlockStyle","customStyleMap","styleMap","ref","spellCheck","onSubmit","class","editPost","CODE","backgroundColor","fontFamily","block","StyleButton","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","AddPost","Container","maxWidth","addPost","add","res","catch","err","Author","PostPage","onEditClick","match","params","setTimeIntervalId","setInterval","clearInterval","scroll","postItem","AdvertBannerTop","Grid","container","spacing","dangerouslySetInnerHTML","__html","SideBanner","marginBottom","WhatsappShareButton","WhatsappIcon","size","round","TwitterShareButton","TwitterIcon","FacebookShareButton","url","FacebookIcon","RedditShareButton","RedditIcon","TelegramShareButton","TelegramIcon","WorkplaceShareButton","WorkplaceIcon","Login","useState","phone_num","password","formDataLogin","setFormData","history","useHistory","handleChangeLogin","updatedFormData","Form","axios","method","API_URL","response","localStorage","setItem","token","error","Group","controlId","Label","Control","Button","variant","App","store","component","AddPostContainer","exact","LoginAdmin","PostsContainer","PostDetail","HomeContainer","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d57a086.chunk.js","sourcesContent":["export const actionTypes = {\r\n    ADD_POST: 'ADD_POST',\r\n    GET_POSTS:'GET_POSTS'\r\n};","import { actionTypes } from '../../ActionsTypes/actionTypes';\r\nconst initialState = {}\r\n\r\nexport default function myReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_POST:\r\n            return {\r\n                ...state,\r\n                ...action\r\n            };\r\n        case actionTypes.GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            };\r\n            break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nimport myReducer from './MyReducer/myReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    page: myReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n//initialise firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB4g1fFy8mVY9fs5c7dW0ti7t53zP2Y2rs\",\r\n  authDomain: \"my-project-1525784461261.firebaseapp.com\",\r\n  databaseURL: \"https://my-project-1525784461261.firebaseio.com\",\r\n  projectId: \"my-project-1525784461261\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"234456308154\",\r\n  appId: \"1:234456308154:web:21336fccce9f972d\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({})\r\n\r\nexport default firebase;","\r\nimport { createStore, applyMiddleware, compose  } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\n\r\nimport rootReducer from './Reducers/rootReducer';\r\nimport fbConfig from '../Config/fbConfig';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const appStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig)\r\n        )\r\n)\r\nexport default appStore","import React from \"react\";\r\n\r\nclass MyComp extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.props.testAction().then(() => {\r\n      console.log(\"test\");\r\n    });\r\n  }\r\n  render() {\r\n    return <div>{/* test */}</div>;\r\n  }\r\n}\r\n\r\nexport default MyComp;\r\n","import { connect } from 'react-redux';\r\nimport { testAction } from '../Store/Actions/promiseBasedAction';\r\nimport Component from '../Components/PromiseBasedActionComponent/PromiseBasedActionComponent'\r\n\r\n\r\nexport default connect(null, {\r\n    testAction\r\n})(Component);\r\n","// import axios from 'axios'\r\n\r\n\r\nexport const testAction = (data) => (dispatch) => (\r\n    new Promise(((resolve, reject) => {\r\n        console.log(\"test\", dispatch)\r\n        resolve()\r\n    }))\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PromiseBasedActionComponent from \"../../Containers/promiseBasedActionContianer\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"header top\">\r\n      <div className=\"container\" >\r\n        <div className=\"header-content\"  style={{display:\"flex\"}}>\r\n        <div className=\"logo-wrp\">\r\n          <Link to=\"/\">\r\n          <img style={{minWidth:35}} className=\"logo\" src=\"/images/logo.png\" />\r\n            <span style={{position:\"relative\", top:1, marginLeft:8}}>\r\n            Code Medium\r\n            </span>\r\n          </Link>\r\n        </div>\r\n        <ul className=\"navbar-main\">\r\n          <li>\r\n            <a className=\"react\" href=\"/\">React</a>\r\n          </li>\r\n          <li>\r\n            <a className=\"javascript\" href=\"/\">Javascript</a>\r\n          </li>\r\n          \r\n        </ul>\r\n        </div>\r\n      </div>\r\n      <PromiseBasedActionComponent />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PromiseBasedActionComponent from \"../../Containers/promiseBasedActionContianer\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div style={{background:\"aliceblue\", fontSize:12, padding:\"15px 0\"}} className=\"footer\">\r\n      <div className=\"container\" >\r\n        <div className=\"header-content\"  style={{display:\"flex\"}}>\r\n        <div className=\"logo-wrp\" >\r\n          Copyright Code Medium\r\n        </div>\r\n        <div className=\"logo-wrp\" style={{marginLeft:15}}>\r\n          Contact Us on codemedium@contact.com\r\n        </div>\r\n        {/* <ul className=\"navbar-main\">\r\n          <li>\r\n            <a className=\"react\" href=\"/\">React</a>\r\n          </li>\r\n          <li>\r\n            <a className=\"javascript\" href=\"/\">Javascript</a>\r\n          </li>\r\n        </ul> */}\r\n        </div>\r\n      </div>\r\n      <PromiseBasedActionComponent />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\n\r\nexport default (props)=>{\r\n    return (\r\n        <div className=\"layout\">\r\n            <Header/>\r\n            {\r\n                props.children\r\n            }\r\n            <Footer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <div style={{ display:\"flex\", justifyContent:\"center\" }} className=\"advertisement\">\r\n        <iframe\r\n          data-creative-load-listener=\"\"\r\n          id=\"200_271_express_html_inpage_0.if\"\r\n          src=\"https://s0.2mdn.net/9099988/1609130924520/index.html\"\r\n          width=\"300\"\r\n          height=\"600\"\r\n          frameborder=\"0\"\r\n          scrolling=\"no\"\r\n          allowfullscreen=\"true\"\r\n          style={{ width: 300, height: 600 }}\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"advertisement\">\r\n        <img src=\"/images/right-banner4.png\" />\r\n      </div>\r\n      <div className=\"advertisement\">\r\n        <img src=\"/images/right-banner-3.png\" />\r\n      </div>\r\n      <div className=\"advertisement\">\r\n        <img src=\"/images/right-banner-2.png\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style/index.scss\";\n\nfunction PostItem(props) {\n  const { item, index } = props;\n  return (\n    <li style={{margin:2}} className=\"post-card\">\n      <Link className=\"link title\" to={\"/\" + item.slug}>\n        <div className=\"post-content\">\n          <div  className=\"sec-1\">\n            <h4 style={{fontSize:12}}>\n            <span style={{padding:4}}>{index+1}</span>\n              \n              {item.title}</h4>\n            {/* <div className=\"desc\">{item.desc}</div> */}\n          </div>\n          {/* <div className=\"sec-2\">\n              <div className=\"figure-content\">\n                <img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1614007213032/5oqCMexP9.webp?w=600&fit=crop&crop=entropy&auto=compress\" />\n              </div>\n          </div> */}\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nexport default PostItem;\n","import PostItem from './PostItem';\n\nexport default PostItem;","import React from 'react';\r\n\r\nexport default()=>{\r\n    return (\r\n        <div className=\"banner-adv\" style={{background:\"aliceblue\"}}>\r\n        <div className=\"container\">\r\n            <img className=\"post-image\" src=\"https://tpc.googlesyndication.com/daca_images/simgad/1666469299077737993\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { path } from 'ramda';\r\n\r\nimport SideBanner from '../Layout/SideBanner/SideBanner';\r\n\r\nimport PostItem from './components/PostItem'\r\n\r\nimport Layout from '../Layout/Layout'\r\n\r\nimport AdvertBannerTop from '../sharedComponents/Advert/AdvertBannerTop'\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getPosts();\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout >\r\n            <div className=\"home\" style={{marginTop:20}}>\r\n            {/* <AdvertBannerTop /> */}\r\n                <div className=\"container\">\r\n                    \r\n                    <div className=\"\" style={{width:800, margin:\"0 auto\"}} >\r\n                        <div className=\"\" >\r\n\r\n                            <ul className=\"posts post-list\">\r\n                                {\r\n                                    this.props.posts && this.props.posts.map((item, index) => {\r\n                                        return (\r\n                                           <PostItem item={item} key={index} index={index} />\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"side-banner\" xs={0} sm={4}>\r\n                            {/* <SideBanner /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: path([\"page\", \"posts\"], state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home);","import { actionTypes } from '../ActionsTypes/actionTypes';\r\n\r\nexport const addPost = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n        fireStore.collection('posts').add(\r\n            {\r\n                ...payload.dataToPost\r\n            }\r\n        ).then((res) => {\r\n            dispatch({\r\n                type: actionTypes.ADD_POST,\r\n                payload: payload.dataToPost\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const testActionCreator = (payload) => {\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport const getPosts = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n        fireStore.collection(\"posts\").get().then(function (querySnapshot) {\r\n            let jsonData = [];\r\n            querySnapshot.forEach(function (doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                jsonData.push(doc.data())\r\n            });\r\n            window.posts = jsonData;\r\n            dispatch(onGetPosts(jsonData));\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const getPost = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n        let postsRef = fireStore.collection('posts');\r\n        postsRef.where('slug', '==', payload.slug).get().then(function (querySnapshot) {\r\n            let jsonData = [];\r\n            querySnapshot.forEach(function (doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                jsonData.push(doc.data())\r\n            });\r\n            window.post = jsonData;\r\n            //dispatch(onGetPosts(jsonData));\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport function onGetPosts(payload) {\r\n    return (\r\n        {\r\n            type: actionTypes.GET_POSTS,\r\n            payload: payload,\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const updatePost = (payload) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const fireStore = getFirestore();\r\n\r\n        let postsRef = fireStore.collection('posts');\r\n        postsRef.where('slug', '==', payload.query.slug)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                    // Build doc ref from doc.id\r\n                    postsRef.doc(doc.id).update(payload.dataToPost);\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Home from '../../Components/Home/Home';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPosts: (payload) => dispatch(homeActions.getPosts(payload))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n","\r\nimport React from 'react';\r\nimport { Editor, EditorState, RichUtils, ContentState } from 'draft-js';\r\n\r\n// import htmlToDraft from 'html-to-draftjs';\r\nimport { stateFromHTML } from 'draft-js-import-html';\r\n\r\nclass MyEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: this.props.title,\r\n      desc: this.props.desc,\r\n      editorState: EditorState.createEmpty(),\r\n      authorId: null,\r\n    };\r\n\r\n    this.focus = () => this.refs.editor.focus();\r\n    this.onChange = (editorState) => this.setState({ editorState });\r\n\r\n    this.editorRef = React.createRef();\r\n    this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n    this.onTab = (e) => this._onTab(e);\r\n    this.toggleBlockType = (type) => this._toggleBlockType(type);\r\n    this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let contentState = stateFromHTML(this.props.content);\r\n\r\n    // const blocksFromHtml = htmlToDraft(this.props.content);\r\n    // const { contentBlocks, entityMap } = blocksFromHtml;\r\n    // const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n    const editorState = EditorState.createWithContent(contentState);\r\n    this.setState({\r\n      editorState: editorState\r\n    })\r\n  }\r\n\r\n  _handleKeyCommand(command) {\r\n    const { editorState } = this.state;\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _onTab(e) {\r\n    const maxDepth = 4;\r\n    this.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n  }\r\n\r\n  _toggleBlockType(blockType) {\r\n    this.onChange(\r\n      RichUtils.toggleBlockType(\r\n        this.state.editorState,\r\n        blockType\r\n      )\r\n    );\r\n  }\r\n\r\n  _toggleInlineStyle(inlineStyle) {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(\r\n        this.state.editorState,\r\n        inlineStyle\r\n      )\r\n    );\r\n  }\r\n\r\n  handleChange = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    })\r\n  }\r\n\r\n  updatePost = (e) => {\r\n    e.preventDefault()\r\n    let slug = this.state.title.replace(/\\s/g, '-');\r\n    if (this.props.slug) {\r\n      slug = this.props.slug\r\n    }\r\n\r\n    let payload = {\r\n      dataToPost: {\r\n        title: this.state.title,\r\n        desc: this.state.desc,\r\n        content: this.refs.editor.editor.innerHTML,\r\n        authorFirstName: 'Mi',\r\n        authorLastName: \"Nin\",\r\n        authorId: this.state.authorId,\r\n        createdAt: new Date(),\r\n        slug: slug\r\n      },\r\n      query: {\r\n        ...this.props.query,\r\n        id: this.props.id\r\n      }\r\n    }\r\n    if(this.state.authorId==='8958'){\r\n      this.props.updatePost(payload);\r\n      alert(\"So far so good\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    // If the user changes block type before entering any text, we can\r\n    // either style the placeholder or hide it. Let's just hide it now.\r\n    let className = 'RichEditor-editor';\r\n    var contentState = editorState.getCurrentContent();\r\n    if (!contentState.hasText()) {\r\n      if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n        className += ' RichEditor-hidePlaceholder';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"my-editor\">\r\n        <div>\r\n          <p>\r\n            Write Post\r\n                </p>\r\n        </div>\r\n        <div>\r\n          <p>Title</p>\r\n          <input value={this.state.title} onChange={(e) => { this.handleChange(e, \"title\") }} placeholder=\"title...\"></input>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            Description\r\n                </p>\r\n          <textarea value={this.state.desc} onChange={(e) => { this.handleChange(e, \"desc\") }} />\r\n        </div>\r\n        <div className=\"edittor-wrp RichEditor-root\">\r\n          <BlockStyleControls\r\n            editorState={editorState}\r\n            onToggle={this.toggleBlockType}\r\n          />\r\n          <InlineStyleControls\r\n            editorState={editorState}\r\n            onToggle={this.toggleInlineStyle}\r\n          />\r\n          <div className={className} onClick={this.focus}>\r\n            <Editor\r\n\r\n              blockStyleFn={getBlockStyle}\r\n              customStyleMap={styleMap}\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              onChange={this.onChange}\r\n              onTab={this.onTab}\r\n\r\n              ref=\"editor\"\r\n              spellCheck={true}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"bttn-wrap\">\r\n          <form className=\"author-id-form\" onSubmit={this.updatePost}>\r\n          <div class=\"grp\">\r\n            <label>Author Id </label>\r\n            <input type=\"password\" value={this.state.authorId} onChange={(e)=>{this.setState({authorId:e.target.value})}} />\r\n            </div>\r\n            {\r\n              !this.props.editPost &&\r\n              <button>Publish</button>\r\n            }\r\n            {\r\n              this.props.editPost &&\r\n                <button> Update </button>\r\n            }\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 2,\r\n  },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n  switch (block.getType()) {\r\n    case 'blockquote': return 'RichEditor-blockquote';\r\n    default: return null;\r\n  }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.onToggle = (e) => {\r\n      e.preventDefault();\r\n      this.props.onToggle(this.props.style);\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    let className = 'RichEditor-styleButton';\r\n    if (this.props.active) {\r\n      className += ' RichEditor-activeButton';\r\n    }\r\n\r\n    return (\r\n      <span className={className} onMouseDown={this.onToggle}>\r\n        {this.props.label}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n  { label: 'H1', style: 'header-one' },\r\n  { label: 'H2', style: 'header-two' },\r\n  { label: 'H3', style: 'header-three' },\r\n  { label: 'H4', style: 'header-four' },\r\n  { label: 'H5', style: 'header-five' },\r\n  { label: 'H6', style: 'header-six' },\r\n  { label: 'Blockquote', style: 'blockquote' },\r\n  { label: 'UL', style: 'unordered-list-item' },\r\n  { label: 'OL', style: 'ordered-list-item' },\r\n  { label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n  const { editorState } = props;\r\n  const selection = editorState.getSelection();\r\n  const blockType = editorState\r\n    .getCurrentContent()\r\n    .getBlockForKey(selection.getStartKey())\r\n    .getType();\r\n\r\n  return (\r\n    <div className=\"RichEditor-controls\">\r\n      {BLOCK_TYPES.map((type) =>\r\n        <StyleButton\r\n          key={type.label}\r\n          active={type.style === blockType}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n  { label: 'Bold', style: 'BOLD' },\r\n  { label: 'Italic', style: 'ITALIC' },\r\n  { label: 'Underline', style: 'UNDERLINE' },\r\n  { label: 'Monospace', style: 'CODE' },\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n  var currentStyle = props.editorState.getCurrentInlineStyle();\r\n  return (\r\n    <div className=\"RichEditor-controls\">\r\n      {INLINE_STYLES.map(type =>\r\n        <StyleButton\r\n          key={type.label}\r\n          active={currentStyle.has(type.style)}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEditor;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport MyEditor from './MyEditor';\r\nimport EditorConvertToHTML from './EditorConvertToHTML'\r\n\r\nimport Layout from '../Layout/Layout'\r\n\r\nclass AddPost extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout >\r\n            <div className=\"home\">\r\n                <Container maxWidth=\"lg\">\r\n                    <MyEditor\r\n                        updatePost={this.props.addPost}\r\n                        content={''}\r\n                        title={''}\r\n                        desc={''}\r\n                        query={false}\r\n                        slug={false}\r\n                    />\r\n                    {/* <EditorConvertToHTML addPost={this.props.addPost} />> */}\r\n                </Container>\r\n            </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nexport default AddPost;\r\n","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\n\r\nclass EditorConvertToHTML extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title:'',\r\n          editorState: EditorState.createEmpty(),\r\n          authorKey:\"\"\r\n        };\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    handleChange=(e,key)=>{\r\n        this.setState({\r\n          [key]:e.target.value\r\n        })\r\n      }\r\n\r\n    addPost = () => {\r\n        console.log(draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())))\r\n        console.log(this.state.editorState.getCurrentContent().toJS())\r\n        let dataToPost = {\r\n            title: this.state.title,\r\n            content: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\r\n            authorFiesrName: 'Mi',\r\n            authorlastName: \"Nin\",\r\n            authorId: 12345,\r\n            createdAt: new Date()\r\n        }\r\n        this.props.addPost(dataToPost);\r\n    }\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div className=\"my-editor\">\r\n                <div>\r\n                    <p>\r\n                        Write Post\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p>Title</p>\r\n                    <input value={this.state.title} onChange={(e) => { this.handleChange(e, \"title\") }} placeholder=\"title...\"></input>\r\n                </div>\r\n                <Editor\r\n                    editorState={editorState}\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    ref=\"editor\"\r\n                    spellCheck={true}\r\n                />\r\n                <div>\r\n                    <span>Author Key</span>\r\n                    <input value={this.state.authorKey} onChange={(e) => { this.handleChange(e, \"authorKey\") }}></input>\r\n                </div>\r\n                <button onClick={this.addPost}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditorConvertToHTML;","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport AddPost from '../../Components/AddPost/AddPost';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: (payload) => dispatch(homeActions.addPost(payload)),\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddPost));\r\n","import React from \"react\";\r\n\r\nclass Author extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"author-wrap clearfix\">\r\n        <div id=\"authorBox\">\r\n          {/* <img src='images/download (1).jpg' /> */}\r\n          <div>\r\n            <h4>Mustkeem K</h4>\r\n            <p>Software Engineer</p>\r\n            {/* <p>Bay Area</p> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Author;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withRouter } from \"react-router\"\r\nimport { path } from 'ramda'\r\n\r\nimport SideBanner from '../Layout/SideBanner/SideBanner'\r\nimport Author from '../Home/Author';\r\nimport MyEditor from '../AddPost/MyEditor';\r\nimport AdvertBannerTop from '../sharedComponents/Advert/AdvertBannerTop';\r\n\r\nimport Layout from '../Layout/Layout'\r\n\r\nclass PostPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editPost: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.match.params);\r\n        let setTimeIntervalId = setInterval(() => {\r\n            if (window.post) {\r\n                clearInterval(setTimeIntervalId);\r\n                this.setState({\r\n                    post: window.post\r\n                })\r\n            }\r\n        }, 1000);\r\n        window.scroll(0, 0)\r\n        \r\n    }\r\n\r\n    onEditClick = () => {\r\n        this.setState({\r\n            editPost: !this.state.editPost\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const postItem = path([0,], window.post);\r\n        if (!postItem) {\r\n            return null;\r\n        }\r\n        return (\r\n            <Layout >\r\n            <div className=\"post-page\">\r\n                <Container>\r\n                    <AdvertBannerTop />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={8}>\r\n                            <div className=\"bttn-wrap\">\r\n                                <button onClick={this.onEditClick}>\r\n                                    {\r\n                                        !this.state.editPost &&\r\n                                        'Edit Post'\r\n                                    }\r\n                                    {\r\n                                        this.state.editPost &&\r\n                                        'View Post'\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                            {\r\n                                !this.state.editPost &&\r\n                                <div className=\"post-wrap\">\r\n                                    <div className=\"post RichEditor-editor\" >\r\n                                        <h1 className=\"title\">\r\n                                            <strong>{postItem.title}</strong>\r\n                                        </h1>\r\n                                        <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: postItem.content }}>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Author />\r\n                                </div>\r\n                            }\r\n                            {\r\n                                this.state.editPost &&\r\n                                <div>\r\n                                    <MyEditor\r\n                                        content={postItem.content}\r\n                                        title={postItem.title}\r\n                                        desc={postItem.desc}\r\n                                        updatePost={this.props.updatePost}\r\n                                        query={this.props.match.params}\r\n                                        slug={postItem.slug}\r\n                                        id={postItem.id}\r\n                                        editPost={true}\r\n\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        </Grid>\r\n                        <Grid className=\"side-banner\" item xs={0} sm={4}>\r\n                            <SideBanner />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\\\r\n            </Layout >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PostPage);","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport PostPage from '../../Components/PostPage/PostPage';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n   getPost: (payload) => dispatch(homeActions.getPost(payload)),\r\n   updatePost: (payload) => dispatch(homeActions.updatePost(payload))\r\n   \r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostPage));\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withRouter } from \"react-router\";\r\nimport { path } from \"ramda\";\r\nimport { IoLogoWhatsapp } from \"react-icons/io\";\r\nimport { FaBeer, FaFacebook } from \"react-icons/fa\";\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  RedditShareButton,\r\n  RedditIcon,\r\n  TelegramShareButton,\r\n  TelegramIcon,\r\n  TwitterShareButton,\r\n  TwitterIcon,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n  WorkplaceShareButton,\r\n  WorkplaceIcon,\r\n} from \"react-share\";\r\n\r\nimport SideBanner from \"../Layout/SideBanner/SideBanner\";\r\nimport Author from \"../Home/Author\";\r\nimport MyEditor from \"../AddPost/MyEditor\";\r\nimport AdvertBannerTop from \"../sharedComponents/Advert/AdvertBannerTop\";\r\n\r\nimport Layout from \"../Layout/Layout\";\r\n\r\nclass PostPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editPost: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getPost(this.props.match.params);\r\n    let setTimeIntervalId = setInterval(() => {\r\n      if (window.post) {\r\n        clearInterval(setTimeIntervalId);\r\n        this.setState({\r\n          post: window.post,\r\n        });\r\n      }\r\n    }, 1000);\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  onEditClick = () => {\r\n    this.setState({\r\n      editPost: !this.state.editPost,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const postItem = path([0], window.post);\r\n    if (!postItem) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Layout>\r\n        <div className=\"post-page\">\r\n          <div className=\"container\">4\r\n          <div style={{width:800, margin:\"0 auto\"}}>\r\n                <div className=\"bttn-wrap\">\r\n                                <button onClick={this.onEditClick}>\r\n                                    {\r\n                                        !this.state.editPost &&\r\n                                        'Edit Post'\r\n                                    }\r\n                                    {\r\n                                        this.state.editPost &&\r\n                                        'View Post'\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                {!this.state.editPost && (\r\n                  <div className=\"post-wrap\">\r\n                    <div className=\"post RichEditor-editor\">\r\n                      <h1 className=\"title\">\r\n                        <strong>{postItem.title}</strong>\r\n                      </h1>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                          marginBottom: 20,\r\n                        }}\r\n                      >\r\n                        <div className=\"share-icon-container\">\r\n                          <WhatsappShareButton>\r\n                            <WhatsappIcon size={32} round={true} />\r\n                          </WhatsappShareButton>\r\n\r\n                          <TwitterShareButton>\r\n                            <TwitterIcon size={32} round={true} />\r\n                          </TwitterShareButton>\r\n\r\n                          <FacebookShareButton url=\"test\">\r\n                            <FacebookIcon size={32} round={true} />\r\n                          </FacebookShareButton>\r\n\r\n                          <RedditShareButton>\r\n                            <RedditIcon size={32} round={true} />\r\n                          </RedditShareButton>\r\n\r\n                          <TelegramShareButton>\r\n                            <TelegramIcon size={32} round={true} />\r\n                          </TelegramShareButton>\r\n\r\n                          <WorkplaceShareButton>\r\n                            <WorkplaceIcon size={32} round={true} />\r\n                          </WorkplaceShareButton>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"post-content\"\r\n                        dangerouslySetInnerHTML={{ __html: postItem.content }}\r\n                      ></div>\r\n                    </div>\r\n                    {/* <Author /> */}\r\n                  </div>\r\n                )}\r\n                {this.state.editPost && (\r\n                  <div>\r\n                    <MyEditor\r\n                      content={postItem.content}\r\n                      title={postItem.title}\r\n                      desc={postItem.desc}\r\n                      updatePost={this.props.updatePost}\r\n                      query={this.props.match.params}\r\n                      slug={postItem.slug}\r\n                      id={postItem.id}\r\n                      editPost={true}\r\n                    />\r\n                  </div>\r\n                )}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PostPage);\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport PostPage from '../../Components/PostPage2/PostPage';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n   getPost: (payload) => dispatch(homeActions.getPost(payload)),\r\n   updatePost: (payload) => dispatch(homeActions.updatePost(payload))\r\n   \r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostPage));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { API_URL } from \"../../../config\";\r\n\r\nimport './style/index.scss';\r\n\r\nfunction Login(props) {\r\n\r\n  const [formDataLogin, setFormData] = useState({ phone_num: \"\", password: \"\" });\r\n  const history = useHistory();\r\n\r\n  const handleChangeLogin = (key, e) => {\r\n    const updatedFormData = { ...formDataLogin };\r\n\r\n    updatedFormData[key] = e.target.value;\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  const handleSubmitLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: API_URL + \"/auth/login\",\r\n      data: formDataLogin,\r\n    })\r\n      .then(function (response) {\r\n        localStorage.setItem(\"woodenculture-token-admin\", response.data.token);\r\n        history.push(\"/dashboard/add-product\");\r\n\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  console.log(\"test1\")\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-content\">\r\n        <div class=\"log-form medium-size\">\r\n          <div className=\"inner-wrp\">\r\n            <h2>Admin</h2>\r\n            <Form onSubmit={handleSubmitLogin}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Mobile Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter mobile number\"\r\n                  onChange={(e) => {\r\n                    handleChangeLogin(\"phone_num\", e);\r\n                  }}\r\n                  value={formDataLogin.phone_num}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => {\r\n                    handleChangeLogin(\"password\", e);\r\n                  }}\r\n                  value={formDataLogin.password}\r\n                />\r\n              </Form.Group>\r\n              <div className=\"button-grp\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import Login from './Login';\n\nexport default Login;","import React from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './App.scss';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store/store';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Layout from './Components/Layout/Layout';\r\nimport HomeContainer from './Containers/HomeContainer/HomeContainer';\r\nimport AddPostContainer from './Containers/AddPostContainer/AddPostContainer';\r\nimport PostsContainer from './Containers/PostsContainer/PostsContainer';\r\nimport PostDetail from './Containers/PostDetail/PostDetail';\r\n\r\nimport LoginAdmin from './Components/admin/Login';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n          <BrowserRouter>\r\n              <Switch>\r\n                <Route path=\"/add-post\" component={AddPostContainer}/>\r\n\r\n                <Route exact path=\"/admin\" component={LoginAdmin}/>\r\n                <Route exact path=\"/admin/:slug\" component={PostsContainer}/>\r\n                <Route exact path=\"/:slug\" component={PostDetail}/>\r\n\r\n                <Route exact path=\"/\" component={HomeContainer}/>\r\n\r\n\r\n                \r\n            </Switch>\r\n          </BrowserRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}