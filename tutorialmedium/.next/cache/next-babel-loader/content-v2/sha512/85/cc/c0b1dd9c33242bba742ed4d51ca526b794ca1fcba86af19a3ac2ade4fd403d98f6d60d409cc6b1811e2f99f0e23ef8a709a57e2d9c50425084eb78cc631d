{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/tutorialmedium/pages/[slug].js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import PostComponent from \"../Components/PostPage\";\n\nfunction PostPage({\n  products\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    products: products,\n    children: \"test \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n} // This function gets called at build time\n\n\n_c = PostPage;\n\nconst mapStateToprops = state => {\n  var _state$products$fetch;\n\n  return {\n    products: (_state$products$fetch = state.products.fetchProducts.data) === null || _state$products$fetch === void 0 ? void 0 : _state$products$fetch.products\n  };\n};\n\nexport var __N_SSG = true;\nexport default connect(mapStateToprops)(PostPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/codemedium/codemedium-frontend/tutorialmedium/pages/[slug].js"],"names":["React","connect","PostPage","products","mapStateToprops","state","fetchProducts","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAOA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,sBAAO;AAAK,IAAA,QAAQ,EAAEA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;KAJSD,Q;;AAoET,MAAME,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,SAAO;AACLF,IAAAA,QAAQ,2BAAEE,KAAK,CAACF,QAAN,CAAeG,aAAf,CAA6BC,IAA/B,0DAAE,sBAAmCJ;AADxC,GAAP;AAGD,CAJD;;;AAMA,eAAeF,OAAO,CAACG,eAAD,CAAP,CAAyBF,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\n// import PostComponent from \"../Components/PostPage\";\n\nimport { wrapper as storeWrapper } from \"../Store/store\";\nimport { getPost2 } from \"../Store/Actions/actions\";\n\nimport { API_URL } from \"../config\";\n\nfunction PostPage({ products }) {\n  return <div products={products} >test </div>;\n}\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios({\n      method: \"get\",\n      url: API_URL + \"/feed/posts\",\n    })\n      .then(function (response) {\n        return response.data;\n      })\n      .catch(function (error) {\n        return error;\n      });\n\n      const posts= await res.posts;\n\n\n  // Get the paths we want to pre-render based on posts\n  const paths = [];\n  posts.forEach((post) => {\n      paths.push({\n        params: { slug: post.slug },\n      });\n  });\n\n  console.log(\"testeeeeeeeeee\", paths);\n\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false };\n}\n\n// This also gets called at build time\n// export async function getStaticProps({ params }) {\n//   const res = await axios({\n//     method: \"get\",\n//     url: API_URL + \"/feed/products\",\n//     params: {\n//       category_slug: params.tag,\n//     },\n//   })\n//     .then(function (response) {\n//       return response.data;\n//     })\n//     .catch(function (error) {\n//       return error;\n//     });\n//   const products = await res.products;\n\n//   // Pass post data to the page via props\n//   return { props: { products } };\n// }\n\nexport const getStaticProps = storeWrapper.getStaticProps(async ({ params, store }) => {\n  await store.dispatch(\n    getPost2(params.slug)\n  );\n\n//   return { props: { products: store.getState().products.fetchProducts.data?.products } };\nreturn { props: { post: {} } };\n\n});\n\nconst mapStateToprops = (state) => {\n  return {\n    products: state.products.fetchProducts.data?.products,\n  };\n};\n\nexport default connect(mapStateToprops)(PostPage);"]},"metadata":{},"sourceType":"module"}